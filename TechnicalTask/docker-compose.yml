version: '3.8'
services:
  webapi-a:
    build:
      context: ./WebApiA
      dockerfile: Dockerfile
    ports:
      - "5000:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - app-network
  webapi-b:
    build:
      context: ./WebApiB
      dockerfile: Dockerfile
    ports:
      - "5001:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__PostgresConnection=Host=localhost;Port=1122;Database=postgres;Username=postgres;Password=root
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
    networks:
      - app-network
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network
  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: newuser
      POSTGRES_PASSWORD: newpassword123
      POSTGRES_DB: usersdb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U newuser"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network
volumes:
  rabbitmq_data:
  postgres_data:
networks:
  app-network:
    driver: bridge